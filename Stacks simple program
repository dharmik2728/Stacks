#include <stdio.h>

#define CAPACITY 5

int stack[CAPACITY];
int top = -1;

// Push operation
void push(int value) {
    if (top >= CAPACITY - 1) {
        printf("Stack overflow! Cannot push %d\n", value);
    } else {
        stack[++top] = value;
        printf("%d pushed to stack\n", value);
    }
}

// Check if stack is empty
void isEmpty() {
    if (top == -1) {
        printf("The stack is empty.\n");
    } else {
        printf("The stack is not empty. Current size: %d\n", top + 1);
    }
}

// Check if stack is full
void isFull() {
    if (top == CAPACITY - 1) {
        printf("The stack is full.\n");
    } else {
        printf("The stack is not full. Remaining capacity: %d\n", CAPACITY - top - 1);
    }
}

int main() {
    int command, value;

    while (scanf("%d", &command) == 1) {
        switch (command) {
            case 1: // Push
                if (scanf("%d", &value) == 1) {
                    push(value);
                } else {
                    printf("Invalid input. Exiting...\n");
                    return 1;
                }
                break;
            case 3: // Check if empty
                isEmpty();
                break;
            case 4: // Check if full
                isFull();
                break;
            case 5: // Exit
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    // Final exit message in case input ends without command 5
    printf("Exiting...\n");
    return 0;
}
